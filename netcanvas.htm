<html>
	<head>
		<title>netcanvas for crossplatform</title>
		<meta charset="utf-8">
		<meta name="viewport" content="user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0, width=device-width" />
		<script src="./jquery-2.1.0.min.js"></script>
		<script src="./croquis.js/extension/HSBRect/HSBRect.js"></script>
		<script src="./croquis.js/extension/TinyColor/tinycolor.js"></script>

		<script src="./croquis.js/extension/croquis.js"></script>
		<script src="./croquis.js/extension/croquis.mobile.js"></script>
		<script src="./croquis.js/extension/croquis.move.js"></script>
		<script src="./croquis.js/extension/croquis.colorpicker.js"></script>
		<script src="./croquis.js/extension/croquis.shortcutkey.js"></script>
		<script src="./croquis.js/extension/croquis.brushimage.js"></script>
		<script src="./croquis.js/extension/croquis.layer.js"></script>
		<script src="./croquis.js/extension/croquis.brushpointer.js"></script>

		<script src="./netcanvas.js"></script>

		<style>
			body {
				margin:0; padding:0;
				background-color:#999;
				font-family: NanumGothic, 'Nanum Gothic', sans-serif;
			}

			/* join */
			#join { position:absolute; background-color:#999; }

			/* croquis part */
			#croquis_container {
				background-color: #ccc;
				box-shadow: 0 2px 4px 2px rgba(0, 0, 0, 0.4);
			}
			#croquis_element { background-color: #fff; }

			/* toolset part */
			#toolset_toggle { position:absolute; display:block; background: url(./img/more.png) repeat-x; background-size: 100% 100%; cursor:hand; width:60px; height: 60px; opacity:0.5; }
			#toolset_toggle:hover { opacity:1; }
			#toolset { position:absolute; background: url(./img/bg_bottom.png) repeat-x; background-size: 100% 100%; }
			#toolset ul { margin:0; padding:0; margin-top:5px; }
			#toolset li { display:block; width:60px; height:60px; cursor:hand; float:left; opacity:0.5; background-size: 100% 100%; }
			#toolset li:hover { opacity:1; }

			#toolset_undo { background: url(./img/undo.png) no-repeat; }
			#toolset_redo { background: url(./img/redo.png) no-repeat; }
			#toolset_erase { background: url(./img/eraser.png) no-repeat; }
			#toolset_brush { background: url(./img/brush.png) no-repeat; }
			#toolset_hand { background: url(./img/hand.png) no-repeat; }
			#toolset_color { background: url(./img/color.png) no-repeat; }
			#toolset_layer { background: url(./img/layers.png) no-repeat; }
			#toolset_zoom { background: url(./img/zoom.png) no-repeat; }
			#toolset_chat { background: url(./img/chat.png) no-repeat; }

			/* navbar part */
			#navbar { position:absolute; }
			#navbar .widget { clear:both; display:block; margin-bottom:20px; width:200px; box-shadow: 0 2px 4px 2px rgba(0, 0, 0, 0.4); background-color:#fff; overflow:hidden; padding-bottom:10px; }
			#navbar h3 { margin:0; padding-left:10px; height:40px; line-height:40px; border-bottom:1px solid #e6e6e6; font-size:18px; font-weight:normal; color:#333; cursor:default; }
			#navbar h4 { margin:10px; font-size:12px; font-weight:normal; color:#333;  cursor:default; }
			#navbar p { color: #b3b3b3; margin:10px; font-size:11px; cursor:default; }
			#navbar .close { display:block; width:26px; height:22px; margin-top:-30px; margin-bottom:18px; margin-left:166px; border-left: 1px solid #999; background: url(./img/close.png) no-repeat top right; background-size: 22px 22px; cursor:hand; opacity:0.5; }
			#navbar .close:hover { opacity:1; }


			#brushimage { margin:0; padding:0; clear:both; overflow:hidden; }
			#brushimage li { cursor:hand; float:left; display:block; width:36px; height:36px; border:1px solid #ccc; }
			#brushimage img { display:block; width: 16px; height:16px; margin:10px; }


			#layerlist { margin:0; padding:0; clear:both; }
			#layerlist li { cursor:move; clear:both; height:40px; border-bottom:1px solid #ccc; font-size:12px; }
			#layerlist li .thumbnail { display: inline-block; vertical-align: middle; width:40px; height:40px; }
			#layerlist li .remove { float:right; font-weight:bold; color:red; }
			#layerlist li.selected { font-weight:bold; }


			#reconnect { opacity:0.6; background-color: #000; border-radius: 10px; height:80px; width:300px; padding:30px 20px; text-align: center; position:absolute; z-index:9999; color:#fff; }
		</style>

		<script>
			$(document).ready(function () {
				// croquis part
				var croquis = new Croquis();
				Croquis.addToElement(croquis, document.getElementById("canvas"));

				Croquis.moveNavigator(croquis, document.getElementById("navigator"), 200, 200);

				Croquis.ShortcutKey(croquis);

				Croquis.BrushImage(croquis,
					[null, "./brushes/1.png", "./brushes/2.png", "./brushes/3.png", "./brushes/4.png", "./brushes/5.png"],
					document.getElementById("brushimage"),
					function() {brushpointer.updatePointer(brush);});

				Croquis.ColorPicker(croquis, 200, 200,
					document.getElementById("colorpicker"),
					document.getElementById("colorpicker-hue-slider"),
					document.getElementById("colorpicker-alpha-slider"));

				Croquis.Layer(croquis, document.getElementById("layerlist"));	// must called immediately after croquis created

				brushpointer = new Croquis.BrushPointer(croquis);
				brushpointer.updatePointer(croquis.getTool());


				croquis.setCanvasSize(600, 480);
				croquis.addLayer();


				var eraserData = {};
				var brushData = {};
				function initElements() {
					var brush = croquis.getTool();
					eraserData.size = brushData.size = brush.getSize();
					eraserData.flow = brushData.flow = brush.getFlow();
					eraserData.spacing = brushData.spacing = brush.getSpacing();

					$("#navbar").hide();
					$("#toolset").hide();

					// widget calling
					function callWidget(element) {
						// hide all widget
						$("#navbar div.widget").hide();

						// show only element
						element.show();

						// show navbar
						$("#navbar").show();
					}
					// toolset/widget init
					function changeMode(brushmode) {
						if (brushmode == true) {
							croquis.setPaintingKnockout(false);
							var brush = croquis.getTool();
							brush.setSize(brushData.size);
							brush.setFlow(brushData.flow);
							brush.setSpacing(brushData.spacing);
							croquis.setTool(brush);
						} else {
							croquis.setPaintingKnockout(true);
							var brush = croquis.getTool();
							brush.setSize(eraserData.size);
							brush.setFlow(eraserData.flow);
							brush.setSpacing(eraserData.spacing);
							croquis.setTool(brush);
						}
					}
					$("#toolset_toggle").click(function() {
						$("#toolset").toggle();
					});
					$("#toolset_undo").click(function() {
						croquis.undo();
					});
					$("#toolset_redo").click(function() {
						croquis.redo();
					});
					$("#toolset_erase").click(function() {
						changeMode(false);
						callWidget($("#navbar_eraser"));
					});
					$("#toolset_brush").click(function() {
						changeMode(true);
						callWidget($("#navbar_brush"));
					});
					$("#toolset_hand").click(function() {
						callWidget($("#navbar_stabilizer"));
					});
					$("#toolset_color").click(function() {
						changeMode(true);
						callWidget($("#navbar_color"));
					});
					$("#toolset_layer").click(function() {
						callWidget($("#navbar_layer"));
					});
					$("#toolset_zoom").click(function() {
						callWidget($("#navbar_zoom"));
					});
					$("#toolset_chat").click(function() {
						callWidget($("#navbar_chat"));
					});
					$("span.close").click(function() {
						$("#navbar").hide();
					});


					// button init
					$("#addlayer").click(function() {
						croquis.addLayer();
					});


					// range init
					croquis.setToolStabilizeLevel(10);
					croquis.setToolStabilizeWeight(40 * 0.01);
					$("#tool-stabilize-level-slider").val(croquis.getToolStabilizeLevel());
    				$('#tool-stabilize-weight-slider').val(croquis.getToolStabilizeWeight() * 100);
				    $('#brush-size-slider').val(brushData.size);
				    $('#brush-flow-slider').val(brushData.flow * 100);
				    $('#brush-spacing-slider').val(brushData.spacing * 100);
				    $('#eraser-size-slider').val(eraserData.size);
				    $('#eraser-flow-slider').val(eraserData.flow * 100);
				    $('#eraser-spacing-slider').val(eraserData.spacing * 100);
				    $('#zoom-slider').val(croquis.getScale() * 100);

					$('#tool-stabilize-level-slider').change(function () {
						croquis.setToolStabilizeLevel(this.value);
					});
					$('#tool-stabilize-weight-slider').change(function () {
						croquis.setToolStabilizeWeight(this.value * 0.01);
					});
				    $('#brush-size-slider').change(function () {
				    	brushData.size = this.value;
				    	var brush = croquis.getTool();
						brush.setSize(this.value);
						brushpointer.updatePointer(brush);
						croquis.setTool(brush);
					});
				    $('#brush-flow-slider').change(function () {
				    	brushData.flow = this.value;
				    	var brush = croquis.getTool();
						brush.setFlow(this.value * 0.01);
						croquis.setTool(brush);
					});
				    $('#brush-spacing-slider').change(function () {
				    	brushData.spacing = this.value;
				    	var brush = croquis.getTool();
						brush.setSpacing(this.value * 0.01);
						croquis.setTool(brush);
					});
				    $('#eraser-size-slider').change(function () {
				    	eraserData.size = this.value;
				    	var brush = croquis.getTool();
						brush.setSize(this.value);
						croquis.setTool(brush);
					});
				    $('#eraser-flow-slider').change(function () {
				    	eraserData.flow = this.value;
				    	var brush = croquis.getTool();
						brush.setFlow(this.value * 0.01);
						croquis.setTool(brush);
					});
				    $('#eraser-spacing-slider').change(function () {
				    	eraserData.spacing = this.value;
				    	var brush = croquis.getTool();
						brush.setSpacing(this.value * 0.01);
						croquis.setTool(brush);
					});
				    $('#zoom-slider').change(function () {
				    	croquis.setScaleCentered(this.value * 0.01);
					});
					$('#zoom-original').click(function() {
						croquis.setScaleCentered(1);
						$('#zoom-slider').val(100);
					});
				}
				function resizeElements() {
					var margin = {w: 80, h:80};
					var wWidth = $( window ).width();
					var wHeight = $( window ).height();

					// fill
					$("#join").width(wWidth);
					$("#join").height(wHeight);

					// croquis replace
					$("#croquis_container").css({left: margin.w/2, top:margin.h/2});
					croquis.setContainerSize(wWidth-margin.w, wHeight-margin.h);

					// toolset replace
					$("#toolset").css({right: margin.w/2, bottom:margin.h/2, width: wWidth-margin.w})
					$("#toolset_toggle").css({right: margin.w/2, bottom:margin.h/2})

					// navbar replace
					$("#navbar").css({right:margin.w/2, top:margin.h/2});


					$("#reconnect").css({left:wWidth/2-$("#reconnect").width()/2, top:wHeight/2-$("#reconnect").height()/2});
				}

				$(window).resize(function() {
					resizeElements();
				});


				var netcanvas;
				function initNetCanvas() {
					//netcanvas = new NetCanvas("ws://localhost:8800/ws", croquis);
					netcanvas = new NetCanvas("ws://192.168.0.32:8800/ws", croquis);


					// add event handler for element
					function addTextarea(txt) {
						$("#chat").text($("#chat").text() + "\n" + txt);
					}
					function addChat(nick, msg, self) {
						if (self == true) {
							addTextarea("[" + nick + "] " + msg);
						} else {
							addTextarea("<" + nick + "> " + msg);
						}
					}
					function enterChat(msg) {
						netcanvas.sendData({"cmd":"CHAT", "msg":msg});
						addChat("Me", msg, true);
					}
					$("#chatinput").bind('keypress', function(e) {
						if(e.keyCode==13){
							if (this.value != "")
								enterChat(this.value);
							this.value = "";
						}
					});
					$("#chatenter").click(function() {
						var txt = $("#chatinput").value;
						if (txt != "")
							enterChat(txt);
						$("#chatinput").value = "";
					});
					$("#chatnickchange").click(function() {
						var nick = prompt("enter new nickname");
						if (nick != "") {
							netcanvas.sendData({"cmd":"NICK", "nick":nick});
						}
					});


					// add event handler for netcanvas
					netcanvas.onChat = function (nick, msg) {
						addChat(nick, msg);
					}
					netcanvas.onMessage = function (msg) {
						addChat("Server", msg, true);
					}
					netcanvas.onJoin = function (id) {
						addTextarea(id + " had entered.");
					}
					netcanvas.onNick = function (id, nick) {
						addTextarea(id + " set nickname " + nick);
					}
					netcanvas.onQuit = function (nick) {
						addChat("Server", nick + " quit the room.", true);
					}
					netcanvas.onEnter = function () {
						resizeElements();
					}
					netcanvas.onClose = function () {
						showReconnect();
					}
					netcanvas.onOpen = function () {
						hideReconnect();
					}
				}

				initElements();
				initNetCanvas();
				resizeElements();
				hideReconnect();

				$("#retry").click( function () {
					hideReconnect();
					netcanvas.reconnect();
				});

				$("#offline").click( function () {
					hideReconnect();
				});

				function showReconnect() {
					$("#reconnect").show();
				}

				function hideReconnect() {
					$("#reconnect").hide();
				}
			});

		</script>
	</head>
	<body>
		<!-- informing reconnect -->
		<div id="reconnect">
			서버와 연결이 끊겼습니다. <a href="#" id="retry">여기</a>를 터치하면 다시 연결을 재시도합니다.<br>
			오프라인 상태에서 작업하시려면 <a href="#" id="offline">여기</a>를 클릭하십시오.
		</div>

		<!-- drawing -->
		<div id="canvas"></div>
		<div id="toolset">
			<ul>
				<li id="toolset_undo"></li>
				<li id="toolset_redo"></li>
				<li id="toolset_erase"></li>
				<li id="toolset_brush"></li>
				<li id="toolset_hand"></li>
				<li id="toolset_color"></li>
				<li id="toolset_layer"></li>
				<li id="toolset_zoom"></li>
				<li id="toolset_chat"></li>
			</ul>
		</div>
		<div id="toolset_toggle"></div>
		<div id="navbar">
			<div class="widget" id="navbar_eraser">
				<h3>지우개</h3>
				<span class="close"></span>
				<h4>크기</h4>
       			<input id="eraser-size-slider" type="range" min="1" max="100">
				<h4>흐름</h4>
       			<input id="eraser-flow-slider" type="range" min="1" max="100">
				<h4>간격</h4>
       			<input id="eraser-spacing-slider" type="range" min="1" max="100">
			</div>
			<div class="widget" id="navbar_brush">
				<h3>브러시</h3>
				<span class="close"></span>
				<ul id="brushimage"></ul>
				<h4>크기</h4>
       			<input id="brush-size-slider" type="range" min="1" max="100">
				<h4>흐름</h4>
       			<input id="brush-flow-slider" type="range" min="1" max="100">
				<h4>간격</h4>
       			<input id="brush-spacing-slider" type="range" min="1" max="100">
			</div>
			<div class="widget" id="navbar_stabilizer">
				<h3>손떨림 보정</h3>
				<span class="close"></span>
		        <h4>단계</h4>
		        <input id="tool-stabilize-level-slider" type="range" min="3" max="20">
		        <h4>무게</h4>
		        <input id="tool-stabilize-weight-slider" type="range" min="20" max="80">
				<p>손떨림 보정 단계를 높일 수록 선이 부드러워지고,
무게를 높일 수록 천천히 그려집니다.</p>
			</div>
			<div class="widget" id="navbar_layer">
				<h3>레이어</h3>
				<span class="close"></span>
				<ul id="layerlist"></ul>
				<input id="addlayer" type="button" value="add new layer">
			</div>
			<div class="widget" id="navbar_color">
				<h3>색</h3>
				<span class="close"></span>
				<div id="colorpicker"></div>
				<h4>색조</h4>
				<input id="colorpicker-hue-slider" type="range" min="0" max="360">
				<h4>투명도</h4>
				<input id="colorpicker-alpha-slider" type="range" min="0" max="100" value="100">
			</div>
			<div class="widget" id="navbar_zoom">
				<h3>네비게이터</h3>
				<span class="close"></span>
				<div id="navigator"></div>
				<h4>배율</h4>
				<input id="zoom-slider" type="range" min="40" max="300" value="100">
				<h4><a href='#' id='zoom-original'>원래대로</a></h4>
			</div>
			<div class="widget" id="navbar_chat">
				<h3>채팅창</h3>
				<span class="close"></span>
				<textarea disabled id="chat" cols="20" rows="10"></textarea>
				<input id="chatinput" type="text">
				<br>
				<input id="chatenter" type="button" value="chat">
				<input id="chatnickchange" type="button" value="nick change">
			</div>
		</div>
	</body>
</html>